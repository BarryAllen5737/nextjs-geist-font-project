{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/auth.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport interface User {\n  username: string;\n  token: string;\n}\n\nexport interface AuthContextType {\n  user: User | null;\n  login: (username: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nexport const AuthContext = createContext<AuthContextType | null>(null);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const login = async (username: string, password: string): Promise<User> => {\n  const res = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ username, password }),\n  });\n\n  if (!res.ok) {\n    const error = await res.json();\n    throw new Error(error.message);\n  }\n\n  return res.json();\n};\n\nexport const register = async (\n  username: string,\n  email: string,\n  password: string\n): Promise<User> => {\n  const res = await fetch('/api/auth/register', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ username, email, password }),\n  });\n\n  if (!res.ok) {\n    const error = await res.json();\n    throw new Error(error.message);\n  }\n\n  return res.json();\n};\n"],"names":[],"mappings":";;;;;;AAAA;;;AAcO,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA0B;AAE1D,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAQN,MAAM,QAAQ,OAAO,UAAkB;IAC5C,MAAM,MAAM,MAAM,MAAM,mBAAmB;QACzC,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;YAAE;YAAU;QAAS;IAC5C;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,QAAQ,MAAM,IAAI,IAAI;QAC5B,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;IAEA,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,WAAW,OACtB,UACA,OACA;IAEA,MAAM,MAAM,MAAM,MAAM,sBAAsB;QAC5C,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;QAC9C,MAAM,KAAK,SAAS,CAAC;YAAE;YAAU;YAAO;QAAS;IACnD;IAEA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,QAAQ,MAAM,IAAI,IAAI;QAC5B,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;IAEA,OAAO,IAAI,IAAI;AACjB","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/providers/AuthProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useEffect, useState } from 'react';\nimport { AuthContext, User, login as authLogin, register as authRegister } from '@/lib/auth';\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    // Check for stored auth token on mount\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      const userData = await authLogin(username, password);\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      const userData = await authRegister(username, email, password);\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Registration failed:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKO,SAAS,aAAa,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAE9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,uCAAuC;YACvC,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,QAAQ,KAAK,KAAK,CAAC;YACrB;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,UAAkB;QACrC,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,qHAAA,CAAA,QAAS,AAAD,EAAE,UAAU;YAC3C,QAAQ;YACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;QAC9C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,MAAM;QACR;IACF;IAEA,MAAM,WAAW,OAAO,UAAkB,OAAe;QACvD,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,qHAAA,CAAA,WAAY,AAAD,EAAE,UAAU,OAAO;YACrD,QAAQ;YACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;QAC9C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,6LAAC,qHAAA,CAAA,cAAW,CAAC,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;YAAU;QAAO;kBAC1D;;;;;;AAGP;GA3CgB;KAAA","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/socket.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client';\n\nexport interface Message {\n  id: string;\n  content: string;\n  sender: string;\n  channelId: string;\n  timestamp: number;\n  type: 'text' | 'media' | 'voice';\n  mediaUrl?: string;\n}\n\nexport interface Channel {\n  id: string;\n  name: string;\n  serverId: string;\n  type: 'text' | 'voice';\n}\n\nclass SocketService {\n  private socket: Socket | null = null;\n  private static instance: SocketService;\n\n  private constructor() {}\n\n  static getInstance(): SocketService {\n    if (!SocketService.instance) {\n      SocketService.instance = new SocketService();\n    }\n    return SocketService.instance;\n  }\n\n  connect(token: string) {\n    this.socket = io(process.env.NEXT_PUBLIC_SOCKET_URL || 'http://localhost:3001', {\n      auth: { token },\n    });\n\n    this.socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n    });\n\n    this.socket.on('disconnect', () => {\n      console.log('Disconnected from WebSocket server');\n    });\n\n    return this.socket;\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n\n  sendMessage(message: Omit<Message, 'id' | 'timestamp'>) {\n    if (!this.socket) throw new Error('Not connected to WebSocket server');\n    this.socket.emit('message', message);\n  }\n\n  joinChannel(channelId: string) {\n    if (!this.socket) throw new Error('Not connected to WebSocket server');\n    this.socket.emit('join-channel', channelId);\n  }\n\n  leaveChannel(channelId: string) {\n    if (!this.socket) throw new Error('Not connected to WebSocket server');\n    this.socket.emit('leave-channel', channelId);\n  }\n\n  onMessage(callback: (message: Message) => void) {\n    if (!this.socket) throw new Error('Not connected to WebSocket server');\n    this.socket.on('message', callback);\n  }\n\n  onVoiceData(callback: (data: { userId: string; audioData: ArrayBuffer }) => void) {\n    if (!this.socket) throw new Error('Not connected to WebSocket server');\n    this.socket.on('voice-data', callback);\n  }\n\n  sendVoiceData(audioData: ArrayBuffer, channelId: string) {\n    if (!this.socket) throw new Error('Not connected to WebSocket server');\n    this.socket.emit('voice-data', { audioData, channelId });\n  }\n}\n\nexport const socketService = SocketService.getInstance();\n"],"names":[],"mappings":";;;AAiCqB;AAjCrB;AAAA;;AAmBA,MAAM;IACI,SAAwB,KAAK;IACrC,OAAe,SAAwB;IAEvC,aAAsB,CAAC;IAEvB,OAAO,cAA6B;QAClC,IAAI,CAAC,cAAc,QAAQ,EAAE;YAC3B,cAAc,QAAQ,GAAG,IAAI;QAC/B;QACA,OAAO,cAAc,QAAQ;IAC/B;IAEA,QAAQ,KAAa,EAAE;QACrB,IAAI,CAAC,MAAM,GAAG,CAAA,GAAA,kLAAA,CAAA,KAAE,AAAD,EAAE,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,yBAAyB;YAC9E,MAAM;gBAAE;YAAM;QAChB;QAEA,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW;YACxB,QAAQ,GAAG,CAAC;QACd;QAEA,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc;YAC3B,QAAQ,GAAG,CAAC;QACd;QAEA,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,aAAa;QACX,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,UAAU;YACtB,IAAI,CAAC,MAAM,GAAG;QAChB;IACF;IAEA,YAAY,OAA0C,EAAE;QACtD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,MAAM;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;IAC9B;IAEA,YAAY,SAAiB,EAAE;QAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,MAAM;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB;IACnC;IAEA,aAAa,SAAiB,EAAE;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,MAAM;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB;IACpC;IAEA,UAAU,QAAoC,EAAE;QAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,MAAM;QAClC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW;IAC5B;IAEA,YAAY,QAAoE,EAAE;QAChF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,MAAM;QAClC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc;IAC/B;IAEA,cAAc,SAAsB,EAAE,SAAiB,EAAE;QACvD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,MAAM;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc;YAAE;YAAW;QAAU;IACxD;AACF;AAEO,MAAM,gBAAgB,cAAc,WAAW","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/providers/ChatProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { Message, Channel, socketService } from '@/lib/socket';\nimport { useAuth } from '@/lib/auth';\n\ninterface ChatContextType {\n  messages: Message[];\n  channels: Channel[];\n  currentChannel: Channel | null;\n  sendMessage: (content: string, type?: 'text' | 'media') => void;\n  joinChannel: (channelId: string) => void;\n  leaveChannel: (channelId: string) => void;\n  startVoiceChat: (channelId: string) => void;\n  stopVoiceChat: () => void;\n  isVoiceChatActive: boolean;\n}\n\nconst ChatContext = createContext<ChatContextType | null>(null);\n\nexport const useChat = () => {\n  const context = useContext(ChatContext);\n  if (!context) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n\nexport function ChatProvider({ children }: { children: React.ReactNode }) {\n  const { user } = useAuth();\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [channels, setChannels] = useState<Channel[]>([]);\n  const [currentChannel, setCurrentChannel] = useState<Channel | null>(null);\n  const [isVoiceChatActive, setIsVoiceChatActive] = useState(false);\n\n  // Initialize WebSocket connection when user is authenticated\n  useEffect(() => {\n    if (user?.token) {\n      socketService.connect(user.token);\n\n      socketService.onMessage((message) => {\n        setMessages((prev) => [...prev, message]);\n      });\n\n      return () => {\n        socketService.disconnect();\n      };\n    }\n  }, [user]);\n\n  const sendMessage = (content: string, type: 'text' | 'media' = 'text') => {\n    if (!currentChannel || !user) return;\n\n    socketService.sendMessage({\n      content,\n      sender: user.username,\n      channelId: currentChannel.id,\n      type,\n    });\n  };\n\n  const joinChannel = (channelId: string) => {\n    socketService.joinChannel(channelId);\n    const channel = channels.find((c) => c.id === channelId);\n    if (channel) {\n      setCurrentChannel(channel);\n      // Clear messages when joining new channel\n      setMessages([]);\n    }\n  };\n\n  const leaveChannel = (channelId: string) => {\n    socketService.leaveChannel(channelId);\n    if (currentChannel?.id === channelId) {\n      setCurrentChannel(null);\n      setMessages([]);\n    }\n  };\n\n  // Voice chat functionality\n  const startVoiceChat = async (channelId: string) => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const audioContext = new AudioContext();\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(1024, 1, 1);\n\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n\n      processor.onaudioprocess = (e) => {\n        const audioData = e.inputBuffer.getChannelData(0);\n        socketService.sendVoiceData(audioData.buffer, channelId);\n      };\n\n      setIsVoiceChatActive(true);\n\n      // Handle incoming voice data\n      socketService.onVoiceData(({ userId, audioData }) => {\n        if (userId !== user?.username) {\n          const audioContext = new AudioContext();\n          const buffer = audioContext.createBuffer(1, audioData.byteLength, audioContext.sampleRate);\n          buffer.copyToChannel(new Float32Array(audioData), 0);\n          \n          const source = audioContext.createBufferSource();\n          source.buffer = buffer;\n          source.connect(audioContext.destination);\n          source.start();\n        }\n      });\n    } catch (error) {\n      console.error('Failed to start voice chat:', error);\n    }\n  };\n\n  const stopVoiceChat = () => {\n    setIsVoiceChatActive(false);\n    // Additional cleanup for voice chat resources\n  };\n\n  return (\n    <ChatContext.Provider\n      value={{\n        messages,\n        channels,\n        currentChannel,\n        sendMessage,\n        joinChannel,\n        leaveChannel,\n        startVoiceChat,\n        stopVoiceChat,\n        isVoiceChatActive,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}