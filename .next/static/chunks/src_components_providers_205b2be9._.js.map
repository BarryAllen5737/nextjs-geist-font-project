{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/providers/AuthProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport axios from \"axios\";\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      try {\n        const decoded = JSON.parse(atob(token.split(\".\")[1]));\n        if (decoded.exp * 1000 > Date.now()) {\n          setUser({\n            id: decoded.userId,\n            username: decoded.username,\n            email: decoded.email,\n          });\n          setIsAuthenticated(true);\n        } else {\n          localStorage.removeItem(\"token\");\n        }\n      } catch (error) {\n        console.error(\"Token validation error:\", error);\n        localStorage.removeItem(\"token\");\n      }\n    }\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        email,\n        password,\n      });\n\n      const { token } = response.data;\n      localStorage.setItem(\"token\", token);\n\n      const decoded = JSON.parse(atob(token.split(\".\")[1]));\n      setUser({\n        id: decoded.userId,\n        username: decoded.username,\n        email: decoded.email,\n      });\n      setIsAuthenticated(true);\n\n      router.push(\"/en\");\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      await axios.post(\"/api/auth/register\", {\n        username,\n        email,\n        password,\n      });\n      await login(email, password);\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    setIsAuthenticated(false);\n    router.push(\"/en/login\");\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ user, login, register, logout, isAuthenticated }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAoBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,OAAO;gBACT,IAAI;oBACF,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE;oBACnD,IAAI,QAAQ,GAAG,GAAG,OAAO,KAAK,GAAG,IAAI;wBACnC,QAAQ;4BACN,IAAI,QAAQ,MAAM;4BAClB,UAAU,QAAQ,QAAQ;4BAC1B,OAAO,QAAQ,KAAK;wBACtB;wBACA,mBAAmB;oBACrB,OAAO;wBACL,aAAa,UAAU,CAAC;oBAC1B;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,2BAA2B;oBACzC,aAAa,UAAU,CAAC;gBAC1B;YACF;QACF;iCAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,IAAI;YACF,MAAM,WAAW,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,mBAAmB;gBACnD;gBACA;YACF;YAEA,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS,IAAI;YAC/B,aAAa,OAAO,CAAC,SAAS;YAE9B,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE;YACnD,QAAQ;gBACN,IAAI,QAAQ,MAAM;gBAClB,UAAU,QAAQ,QAAQ;gBAC1B,OAAO,QAAQ,KAAK;YACtB;YACA,mBAAmB;YAEnB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,MAAM;QACR;IACF;IAEA,MAAM,WAAW,OAAO,UAAkB,OAAe;QACvD,IAAI;YACF,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,sBAAsB;gBACrC;gBACA;gBACA;YACF;YACA,MAAM,MAAM,OAAO;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,MAAM;QACR;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,QAAQ;QACR,mBAAmB;QACnB,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,6LAAC,YAAY,QAAQ;QACnB,OAAO;YAAE;YAAM;YAAO;YAAU;YAAQ;QAAgB;kBAEvD;;;;;;AAGP;GAhFgB;;QAGC,qIAAA,CAAA,YAAS;;;KAHV;AAkFT,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANa","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/providers/ChatProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\nimport { io, Socket } from \"socket.io-client\";\nimport axios from \"axios\";\n\ninterface Message {\n  id: number;\n  content: string;\n  sender: string;\n  channelId: string;\n  timestamp: number;\n  type: string;\n}\n\ninterface Friend {\n  id: number;\n  username: string;\n}\n\ninterface Server {\n  id: number;\n  name: string;\n}\n\ninterface Channel {\n  id: number;\n  name: string;\n  serverId: number;\n}\n\ninterface ChatContextType {\n  socket: Socket | null;\n  messages: Message[];\n  friends: Friend[];\n  servers: Server[];\n  channels: Channel[];\n  sendMessage: (content: string, channelId: string, type: string) => void;\n  currentChannel: string | null;\n  setCurrentChannel: (channelId: string) => void;\n  fetchFriends: () => Promise<void>;\n  fetchServers: () => Promise<void>;\n  fetchChannels: (serverId: number) => Promise<void>;\n}\n\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\n\nexport const ChatProvider = ({ children }: { children: ReactNode }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [friends, setFriends] = useState<Friend[]>([]);\n  const [servers, setServers] = useState<Server[]>([]);\n  const [channels, setChannels] = useState<Channel[]>([]);\n  const [currentChannel, setCurrentChannel] = useState<string | null>(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n\n    const newSocket = io(\"/api/socket\", {\n      auth: { token },\n      path: \"/api/socket\",\n    });\n\n    setSocket(newSocket);\n\n    newSocket.on(\"message\", (message: Message) => {\n      setMessages((prev) => [...prev, message]);\n    });\n\n    // Initial data fetch\n    fetchFriends();\n    fetchServers();\n\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (currentChannel) {\n      const serverId = currentChannel.split('-')[0];\n      fetchChannels(parseInt(serverId));\n    }\n  }, [currentChannel]);\n\n  const sendMessage = (content: string, channelId: string, type: string) => {\n    if (!socket) return;\n    socket.emit(\"message\", { content, channelId, type });\n  };\n\n  const fetchFriends = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return;\n      const response = await axios.get(\"/api/friends\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setFriends(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch friends:\", error);\n    }\n  };\n\n  const fetchServers = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return;\n      const response = await axios.get(\"/api/servers\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setServers(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch servers:\", error);\n    }\n  };\n\n  const fetchChannels = async (serverId: number) => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return;\n      const response = await axios.get(`/api/servers/${serverId}/channels`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setChannels(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch channels:\", error);\n    }\n  };\n\n  return (\n    <ChatContext.Provider\n      value={{\n        socket,\n        messages,\n        friends,\n        servers,\n        channels,\n        sendMessage,\n        currentChannel,\n        setCurrentChannel,\n        fetchFriends,\n        fetchServers,\n        fetchChannels,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const useChat = () => {\n  const context = useContext(ChatContext);\n  if (!context) {\n    throw new Error(\"useChat must be used within a ChatProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}